<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java开发环境搭建</title>
      <link href="/20211226/.html"/>
      <url>/20211226/.html</url>
      
        <content type="html"><![CDATA[<h1 id="Java开发环境搭建"><a href="#Java开发环境搭建" class="headerlink" title="Java开发环境搭建"></a>Java开发环境搭建</h1><p>这里只介绍<code>window</code>环境下的<code>Jdk</code>安装配置、Linux以及Mac的后面补充</p><h2 id="1、Jdk简介"><a href="#1、Jdk简介" class="headerlink" title="1、Jdk简介"></a>1、Jdk简介</h2><blockquote><p>Jdk全称（java development kit）,及java标准开发包。</p><blockquote><p>JDK是 <a href="https://baike.baidu.com/item/Java/85979">Java</a> 语言的<a href="https://baike.baidu.com/item/%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E5%8C%85/10418833">软件开发工具包</a>主要用于<a href="https://baike.baidu.com/item/%E7%A7%BB%E5%8A%A8%E8%AE%BE%E5%A4%87/9157757">移动设备</a>、<a href="https://baike.baidu.com/item/%E5%B5%8C%E5%85%A5%E5%BC%8F%E8%AE%BE%E5%A4%87/10055189">嵌入式设备</a>上的java应用程序。JDK是整个java开发的核心，它包含了JAVA的运行环境（JVM+Java系统类库）和JAVA工具。</p><blockquote><p>Jdk中包含了Jre(Java Runtime Envirnment)【java运行环境】、java工具和java开发所需的一些基础类库（及JavaApi 包括rt.jar）</p></blockquote></blockquote></blockquote><h2 id="2、Jdk下载"><a href="#2、Jdk下载" class="headerlink" title="2、Jdk下载"></a>2、Jdk下载</h2><p><a href="https://www.oracle.com/java/technologies/downloads/">官网</a></p><p>​        根据自己电脑的配置<code>32/64位</code>等选择版本下载。个人使用的jdk1.8_211版本，如果需要可以下载，下面是连接</p><p>链接：<a href="https://pan.baidu.com/s/16wOSHaTDmol25wVDLNgy6A">https://pan.baidu.com/s/16wOSHaTDmol25wVDLNgy6A</a><br> 提取码：fd8j</p><h2 id="3、jdk的安装"><a href="#3、jdk的安装" class="headerlink" title="3、jdk的安装"></a>3、jdk的安装</h2><p>​      双击下载好的exe软件，一路下一步默认安装、安装过程中也可以根据需要选择安装路径</p><h2 id="4、环境变量配置"><a href="#4、环境变量配置" class="headerlink" title="4、环境变量配置"></a>4、环境变量配置</h2><p><strong>右击此电脑&gt;属性&gt;高级系统设置&gt;环境变量</strong></p><p><img src="https://gitee.com/littlefiremonkey/image/raw/master/image-20211201085153585.png" alt="image-20211201085153585"></p><h3 id="1、新建JAVA-HOME"><a href="#1、新建JAVA-HOME" class="headerlink" title="1、新建JAVA_HOME"></a>1、新建JAVA_HOME</h3><p><strong>系统变量中点击新建按钮</strong></p><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">变量名：JAVA_HOME</span><br><span class="line">变量值：安装jdk的路径</span><br></pre></td></tr></table></figure><p>示范：</p><p><img src="https://gitee.com/littlefiremonkey/image/raw/master/image-20211201085651886.png" alt="image-20211201085651886"></p><h3 id="2、新建CLASSPATH"><a href="#2、新建CLASSPATH" class="headerlink" title="2、新建CLASSPATH"></a>2、新建CLASSPATH</h3><p><strong>系统变量中新建，注意前面的<code>.</code>不要忽略</strong></p><p>输入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">变量名：CLASSPATH</span><br><span class="line">变量值：.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</span><br></pre></td></tr></table></figure><p>示范：</p><p><img src="https://gitee.com/littlefiremonkey/image/raw/master/image-20211201090328307.png" alt="image-20211201090328307"></p><h3 id="3、修改Path变量"><a href="#3、修改Path变量" class="headerlink" title="3、修改Path变量"></a>3、修改Path变量</h3><p><strong>找到path点击编辑&gt;新建两条</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%JAVA_HOME%\bin</span><br><span class="line">%JAVA_HOME%\jre\bin</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/littlefiremonkey/image/raw/master/image-20211201090342556.png" alt="image-20211201090342556"></p><p><strong>所有配置完成后确认</strong></p><h3 id="4、测试是否成功"><a href="#4、测试是否成功" class="headerlink" title="4、测试是否成功"></a>4、测试是否成功</h3><p>打开命令提示符窗口、快捷键win+R输入cmd打开</p><p>输入java、java -version出现信息表示安装成功</p><p><img src="https://gitee.com/littlefiremonkey/image/raw/master/image-20211203224300895.png" alt="image-20211203224300895"></p>]]></content>
      
      
      <categories>
          
          <category> 环境配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 环境配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搜狗输入法自动创建Page Front-matter</title>
      <link href="/20211226/.html"/>
      <url>/20211226/.html</url>
      
        <content type="html"><![CDATA[<h1 id="搜狗输入法自动创建Page-Front-matter"><a href="#搜狗输入法自动创建Page-Front-matter" class="headerlink" title="搜狗输入法自动创建Page Front-matter"></a>搜狗输入法自动创建Page Front-matter</h1>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTFd+CTFd-whale动态靶场搭建</title>
      <link href="/20211225/.html"/>
      <url>/20211225/.html</url>
      
        <content type="html"><![CDATA[<h1 id="CTFd-CTFd-whale动态靶场搭建"><a href="#CTFd-CTFd-whale动态靶场搭建" class="headerlink" title="CTFd+CTFd-whale动态靶场搭建"></a>CTFd+CTFd-whale动态靶场搭建</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>目前CTFd平台的搭建教程网上有很多，但也有部分写的水，不够详细，跟着那些教程部署完多多少少还是会出现不少问题，从而导致部署失败，既浪费了时间精力不说还多多少少影响了学习的进度，有这个功夫在这多折腾平台，还不如多做两道Web题目呢~</p><p>由于学校社团内部学习交流的需要，本人在经过两天的折腾学习后，结合各位前辈所写的的教程，终于成功搭建了<strong>最新的版本的CTFd</strong>，同时使用<strong>CTFd-Whale</strong>支持<strong>动态靶场环境</strong>。</p><p>本教程基于 <strong>Ubuntu14.02 + Docker + Docker Compose</strong>部署，采用最新的<strong>CTFd v3.3.1</strong>安装，文章最后更新日期为 2021.12.25</p><p>如遇到网络环境不佳，导致下载安装速度过慢，请尝试换源、科学上网等。</p><p>本文使用的是**@M1kasu** 已经对<strong>CTFd v3.3.1</strong>官方源码进行了更换国内镜像源、添加CTFd-Whale子模块、配置frp网络、设置静态文件CDN加速等工作，可前往使用M1kasu修改的版本进行安装部署。请前往获取：<a href="https://github.com/M1kasu/CTFd">https://github.com/M1kasu/CTFd</a></p><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p><strong>使用的服务器版本：Ubuntu 21.10/Ubuntu 20.04 LTS</strong></p><p><strong>软件版本：Docker version 20.10.11, build dea9396</strong></p><p><strong>docker-compose version 1.29.2, build 5becea4c</strong></p><p>测试环境：谷歌云</p><p>不建议用虚拟机搭建，同样的办法我在虚拟机上没有搭建成功，建议使用云服务器</p><p><strong>=======================================================</strong></p><h3 id="系统换源"><a href="#系统换源" class="headerlink" title="系统换源"></a>系统换源</h3><p>由于本人的环境为<strong>腾讯云Ubuntu14.02</strong>，故只针对此系统进行换源。</p><p><strong>由于腾讯云自带腾讯云源，所以不需要换源就很快。</strong></p><p><strong>如果是虚拟机搭建就必须要换源。</strong></p><p>具体方法如下：</p><p>Ubuntu系统中，软件源文件地址为：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/apt/sources.list</span><br></pre></td></tr></table></figure><p><strong>1.备份原来的源，将以前的源备份一下，以防以后可以用的。</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br></pre></td></tr></table></figure><p><strong>2.打开/etc/apt/sources.list文件，在前面添加如下条目，并保存。</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>（可将vim更换为自己熟悉的编辑器）</p><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">#添加阿里源</span><br><span class="line"><span class="keyword">deb</span> http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"><span class="keyword">deb</span>-src http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"><span class="keyword">deb</span> http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"><span class="keyword">deb</span>-src http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"><span class="keyword">deb</span> http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"><span class="keyword">deb</span>-src http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"><span class="keyword">deb</span> http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"><span class="keyword">deb</span>-src http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"><span class="keyword">deb</span> http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"><span class="keyword">deb</span>-src http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><p><strong>3.更新</strong></p><p>更新源</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p>如出现依赖问题，解决方式如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get -f install</span><br></pre></td></tr></table></figure><p>更新软件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><p>更改完 sources.list 文件后请运行 sudo apt-get update 更新索引以生效。</p><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git -y</span><br></pre></td></tr></table></figure><h3 id="Docker环境安装"><a href="#Docker环境安装" class="headerlink" title="Docker环境安装"></a>Docker环境安装</h3><p><strong>更新软件列表</strong></p><p>安装前记得先更新一下软件源和软件列表，不然可能会报错</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><p><strong>安装docker</strong></p><p>通过版本安装</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">更新系统包索引</span><br><span class="line">sudo apt-get update</span><br><span class="line">添加HTTPS协议，允许apt从HTTPS安装软件包</span><br><span class="line">sudo apt-get install  apt-transport-https  ca-certificates curl  software-properties-common</span><br><span class="line">添加Docker公共密钥 Docker 官方源</span><br><span class="line">curl -fsSL  https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add</span><br><span class="line">设置版本库类型，软件版本包括三种： stable、edge、<span class="built_in">test</span></span><br><span class="line">sudo add-apt-repository <span class="string">&quot;deb [arch=amd64]  https://download.docker.com/linux/ubuntu <span class="subst">$(lsb_release -cs)</span> stable&quot;</span></span><br><span class="line">安装最新版docker-ce</span><br><span class="line">sudo apt-get install docker-ce</span><br><span class="line">设置开机自启动并启动docker</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><h3 id="Docker-Compose安装"><a href="#Docker-Compose安装" class="headerlink" title="Docker-Compose安装"></a>Docker-Compose安装</h3><p>通过GitHub安装</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">进入https://github.com/docker/compose/releases 查看最新版本。</span><br><span class="line">sudo curl -L https://github.com/docker/compose/releases/download/1.26.2/docker-compose-`uname -s`-`uname -m` -o /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">设置权限</span><br><span class="line">sudo chmod +x /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">查看是否安装成功</span><br><span class="line">docker-compose --version</span><br><span class="line">出现docker-compose version 1.26.2即安装成功</span><br></pre></td></tr></table></figure><p><strong>设置docker镜像加速</strong></p><p>这个是需要设置的</p><ul><li>进入阿里云容器镜像服务:<a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</a></li><li>根据底下配置方法进行配置</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-<span class="string">&#x27;EOF&#x27;</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://******.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p>通过<strong>docker –version</strong>来验证Docker安装是否成功</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker --version</span><br></pre></td></tr></table></figure><p>如果能正常返回版本信息，那么恭喜你现在已经完成了环境准备环节，加油！</p><h2 id="安装准备"><a href="#安装准备" class="headerlink" title="安装准备"></a>安装准备</h2><p><strong>本文针对的是最新版CTFd 3.3.1及CTFd-whale的教程，若不需要配置CTFd-Whale，请移步官方教程。</strong></p><h3 id="Docker集群设置"><a href="#Docker集群设置" class="headerlink" title="Docker集群设置"></a>Docker集群设置</h3><p><strong>1、启用Docker Swarm，并为生成的Manager节点取一个别名</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker swarm init<span class="comment"># 初始化</span></span><br><span class="line">docker node ls<span class="comment"># 查看节点ID</span></span><br><span class="line">docker node update --label-add name=linux-1 &lt;节点 ID&gt;  <span class="comment"># 添加别名</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTF</title>
      <link href="/20211225/.html"/>
      <url>/20211225/.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/20211224/.html"/>
      <url>/20211224/.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
